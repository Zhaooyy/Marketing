24-07-16.20:12:16.240 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 1.8.0_291 on LAPTOP-4QND36CL with PID 19012 (started by Thinkpad in D:\idea\program\Marketing\Marketing-app)
24-07-16.20:12:16.246 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-07-16.20:12:20.423 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-07-16.20:12:20.439 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-07-16.20:12:20.618 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 111 ms. Found 0 Redis repository interfaces.
24-07-16.20:12:26.153 [main            ] INFO  Version                - Redisson 3.23.4
24-07-16.20:12:27.360 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-07-16.20:12:27.388 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-07-16.20:12:33.832 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-07-16.20:12:34.111 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 19.921 seconds (JVM running for 24.713)
24-07-16.20:12:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:12:35.762 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-07-16.20:12:38.111 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-07-16.20:12:38.595 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-07-16.20:12:38.675 [main            ] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: zyy strategyId: 10006 ruleModel: rule_default awardId: 102
24-07-16.20:12:38.678 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 zyy 10006 102 rule_default
24-07-16.20:12:38.809 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_lock code:0000
24-07-16.20:12:38.812 [main            ] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:zyy strategyId:10006 awardId:102
24-07-16.20:12:38.820 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_stock code:0000
24-07-16.20:12:38.946 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-07-16.20:12:38.968 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-07-16.20:19:53.330 [main            ] INFO  RaffleStrategyTest     - Starting RaffleStrategyTest using Java 1.8.0_291 on LAPTOP-4QND36CL with PID 7692 (started by Thinkpad in D:\idea\program\Marketing\Marketing-app)
24-07-16.20:19:53.333 [main            ] INFO  RaffleStrategyTest     - The following 1 profile is active: "dev"
24-07-16.20:19:56.214 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-07-16.20:19:56.228 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-07-16.20:19:56.346 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 0 Redis repository interfaces.
24-07-16.20:20:01.152 [main            ] INFO  Version                - Redisson 3.23.4
24-07-16.20:20:02.278 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
24-07-16.20:20:02.308 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
24-07-16.20:20:07.670 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-07-16.20:20:07.918 [main            ] INFO  RaffleStrategyTest     - Started RaffleStrategyTest in 15.837 seconds (JVM running for 20.193)
24-07-16.20:20:09.525 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-07-16.20:20:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:20:11.482 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-07-16.20:20:11.793 [main            ] INFO  RaffleStrategyTest     - 测试结果：true
24-07-16.20:20:11.880 [main            ] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: zyy strategyId: 10006 ruleModel: rule_default awardId: 102
24-07-16.20:20:11.883 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 zyy 10006 102 rule_default
24-07-16.20:20:11.967 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_lock code:0000
24-07-16.20:20:11.970 [main            ] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:zyy strategyId:10006 awardId:102
24-07-16.20:20:12.067 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_stock code:0001
24-07-16.20:20:12.067 [main            ] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:zyy strategyId:10006 awardId:102 ruleValue:101:1,100
24-07-16.20:20:12.068 [main            ] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:zyy strategyId:10006 awardId:101 awardRuleValue:1,100
24-07-16.20:20:12.069 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_luck_award code:0001
24-07-16.20:20:12.070 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 zyy 10006 101 1,100
24-07-16.20:20:12.759 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":10006,"userId":"zyy"}
24-07-16.20:20:12.772 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardConfig":"1,100","awardId":101}
24-07-16.20:20:12.780 [main            ] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: zyy strategyId: 10006 ruleModel: rule_default awardId: 102
24-07-16.20:20:12.781 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 zyy 10006 102 rule_default
24-07-16.20:20:12.831 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_lock code:0000
24-07-16.20:20:12.832 [main            ] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:zyy strategyId:10006 awardId:102
24-07-16.20:20:12.841 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_stock code:0001
24-07-16.20:20:12.842 [main            ] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:zyy strategyId:10006 awardId:102 ruleValue:101:1,100
24-07-16.20:20:12.842 [main            ] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:zyy strategyId:10006 awardId:101 awardRuleValue:1,100
24-07-16.20:20:12.842 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_luck_award code:0001
24-07-16.20:20:12.842 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 zyy 10006 101 1,100
24-07-16.20:20:12.843 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":10006,"userId":"zyy"}
24-07-16.20:20:12.843 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardConfig":"1,100","awardId":101}
24-07-16.20:20:12.851 [main            ] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: zyy strategyId: 10006 ruleModel: rule_default awardId: 102
24-07-16.20:20:12.852 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 zyy 10006 102 rule_default
24-07-16.20:20:12.859 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_lock code:0000
24-07-16.20:20:12.859 [main            ] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:zyy strategyId:10006 awardId:102
24-07-16.20:20:12.869 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_stock code:0001
24-07-16.20:20:12.875 [main            ] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:zyy strategyId:10006 awardId:102 ruleValue:101:1,100
24-07-16.20:20:12.875 [main            ] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:zyy strategyId:10006 awardId:101 awardRuleValue:1,100
24-07-16.20:20:12.876 [main            ] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_luck_award code:0001
24-07-16.20:20:12.876 [main            ] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 zyy 10006 101 1,100
24-07-16.20:20:12.876 [main            ] INFO  RaffleStrategyTest     - 请求参数：{"strategyId":10006,"userId":"zyy"}
24-07-16.20:20:12.876 [main            ] INFO  RaffleStrategyTest     - 测试结果：{"awardConfig":"1,100","awardId":101}
24-07-16.20:20:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:20:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:20:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:20:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:20:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:20:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:20:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:20:50.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:20:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:10.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:21:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不要产生竞争】
24-07-16.20:22:59.609 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-07-16.20:22:59.632 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
